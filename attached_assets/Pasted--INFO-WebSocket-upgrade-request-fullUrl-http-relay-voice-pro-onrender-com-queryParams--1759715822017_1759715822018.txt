[INFO] WebSocket upgrade request {"fullUrl":"http://relay-voice-pro.onrender.com/","queryParams":{},"tenantIdFromUrl":"","note":"tenant_id will also be checked in Twilio customParameters"}
[INFO] Twilio WebSocket connected {"tenantId":""}
[INFO] Twilio start event received {"streamSid":"MZ288d9a4253cf8e9fc1dd67684d44f7c2","callSid":"CA2323ec6f81268d3b5d2fd3e46556a99c","customParametersReceived":{"phoneNumber":"+19169450065","to":"+19194203058","tenantId":"f3760fe8-4491-4ab1-83dd-4069b1a2d688","greeting":"Hello, thank you for calling Salon Blu. How can I help you today?","businessName":"Salon Blu","from":"+19169450065"},"tenantIdBeforeCheck":""}
[INFO] Tenant ID updated from customParameters {"source":"customParameters","tenantId":"f3760fe8-4491-4ab1-83dd-4069b1a2d688"}
[INFO] Twilio stream started - Final state {"streamSid":"MZ288d9a4253cf8e9fc1dd67684d44f7c2","callSid":"CA2323ec6f81268d3b5d2fd3e46556a99c","tenantId":"f3760fe8-4491-4ab1-83dd-4069b1a2d688","hasTenantId":true,"hasGreeting":true,"hasBusinessName":true,"greeting":"Hello, thank you for calling Salon Blu. How can I ..."}
[INFO] Fetching agent config from Supabase {"tenantId":"f3760fe8-4491-4ab1-83dd-4069b1a2d688","supabaseUrl":"https://gnqqktmslswgjtvxfvdo.supabase.co","hasServiceKey":true}
[INFO] Supabase fetch response {"status":400,"statusText":"Bad Request","ok":false}
[ERROR] Supabase fetch failed {"status":400,"statusText":"Bad Request","errorBody":"{\"code\":\"42703\",\"details\":null,\"hint\":null,\"message\":\"column tenants.voice_settings does not exist\"}"}
[ERROR] Error fetching agent config {"errorMessage":"Failed to fetch tenant config: Bad Request - {\"code\":\"42703\",\"details\":null,\"hint\":null,\"message\":\"column tenants.voice_settings does not exist\"}","errorStack":"Error: Failed to fetch tenant config: Bad Request - {\"code\":\"42703\",\"details\":null,\"hint\":null,\"message\":\"column tenants.voice_settings does not exist\"}\n    at TwilioOpenAIBridge.fetchAgentConfig (file:///app/twilio-voice-realtime.ts:223:15)\n    at eventLoopTick (ext:core/01_core.js:59:7)\n    at async TwilioOpenAIBridge.initOpenAI (file:///app/twilio-voice-realtime.ts:154:27)","tenantId":"f3760fe8-4491-4ab1-83dd-4069b1a2d688"}
[INFO] Initializing OpenAI connection {"tenantId":"f3760fe8-4491-4ab1-83dd-4069b1a2d688","hasConfig":true}
[INFO] OpenAI WebSocket connected successfully 
[INFO] Starting keepalive monitoring 
[INFO] OpenAI session configured {"voice":"alloy","hasCustomInstructions":false,"instructionsLength":88}
[INFO] Sending initial greeting {"greeting":"Hello, thank you for calling Salon Blu. How can I ..."}
[INFO] OpenAI event: session.created {"hasAudio":false,"keys":["type","event_id","session"]}
[INFO] OpenAI session.created 
[INFO] OpenAI event: session.updated {"hasAudio":false,"keys":["type","event_id","session"]}
[INFO] OpenAI session.updated 
[INFO] Greeting message sent to OpenAI with audio modality 
[INFO] OpenAI event: conversation.item.created {"hasAudio":false,"keys":["type","event_id","previous_item_id","item"]}
[INFO] OpenAI event: response.created {"hasAudio":false,"keys":["type","event_id","response"]}
[DEBUG] User started speaking 
[INFO] OpenAI event: response.done {"hasAudio":false,"keys":["type","event_id","response"]}
[INFO] OpenAI event: input_audio_buffer.speech_stopped {"hasAudio":false,"keys":["type","event_id","audio_end_ms","item_id"]}
[INFO] OpenAI event: input_audio_buffer.committed {"hasAudio":false,"keys":["type","event_id","previous_item_id","item_id"]}
[INFO] OpenAI event: conversation.item.created {"hasAudio":false,"keys":["type","event_id","previous_item_id","item"]}
[INFO] OpenAI event: response.created {"hasAudio":false,"keys":["type","event_id","response"]}
[INFO] OpenAI event: response.output_item.added {"hasAudio":false,"keys":["type","event_id","response_id","output_index","item"]}
[INFO] OpenAI event: conversation.item.created {"hasAudio":false,"keys":["type","event_id","previous_item_id","item"]}
[INFO] OpenAI event: response.content_part.added {"hasAudio":false,"keys":["type","event_id","response_id","item_id","output_index","content_index","part"]}
[DEBUG] AI speaking {"text":"Hello"}
[DEBUG] AI speaking {"text":","}
[DEBUG] AI speaking {"text":" thank"}
[DEBUG] AI speaking {"text":" you"}
[DEBUG] AI speaking {"text":" for"}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[DEBUG] AI speaking {"text":" calling"}
[DEBUG] AI speaking {"text":" Salon"}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[DEBUG] AI speaking {"text":" Blu"}
[DEBUG] AI speaking {"text":"."}
[DEBUG] AI speaking {"text":" How"}
[DEBUG] AI speaking {"text":" can"}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[DEBUG] AI speaking {"text":" I"}
[DEBUG] AI speaking {"text":" help"}
[DEBUG] AI speaking {"text":" you"}
[DEBUG] AI speaking {"text":" today"}
[DEBUG] User started speaking 
[INFO] OpenAI event: response.audio.done {"hasAudio":false,"keys":["type","event_id","response_id","item_id","output_index","content_index"]}
[INFO] OpenAI event: response.audio_transcript.done {"hasAudio":false,"keys":["type","event_id","response_id","item_id","output_index","content_index","transcript"]}
[INFO] OpenAI event: response.content_part.done {"hasAudio":false,"keys":["type","event_id","response_id","item_id","output_index","content_index","part"]}
[INFO] OpenAI event: response.output_item.done {"hasAudio":false,"keys":["type","event_id","response_id","output_index","item"]}
[INFO] OpenAI event: response.done {"hasAudio":false,"keys":["type","event_id","response"]}
[INFO] OpenAI event: conversation.item.input_audio_transcription.delta {"hasAudio":true,"keys":["type","event_id","item_id","content_index","delta","obfuscation"]}
[INFO] OpenAI event: conversation.item.input_audio_transcription.completed {"hasAudio":false,"keys":["type","event_id","item_id","content_index","transcript","usage"]}
[INFO] User said {"transcript":"of a better"}
[INFO] OpenAI event: input_audio_buffer.speech_stopped {"hasAudio":false,"keys":["type","event_id","audio_end_ms","item_id"]}
[INFO] OpenAI event: input_audio_buffer.committed {"hasAudio":false,"keys":["type","event_id","previous_item_id","item_id"]}
[INFO] OpenAI event: conversation.item.created {"hasAudio":false,"keys":["type","event_id","previous_item_id","item"]}
[INFO] OpenAI event: response.created {"hasAudio":false,"keys":["type","event_id","response"]}
[DEBUG] User started speaking 
[INFO] OpenAI event: response.done {"hasAudio":false,"keys":["type","event_id","response"]}
[INFO] OpenAI event: input_audio_buffer.speech_stopped {"hasAudio":false,"keys":["type","event_id","audio_end_ms","item_id"]}
[INFO] OpenAI event: input_audio_buffer.committed {"hasAudio":false,"keys":["type","event_id","previous_item_id","item_id"]}
[INFO] OpenAI event: conversation.item.created {"hasAudio":false,"keys":["type","event_id","previous_item_id","item"]}
[INFO] OpenAI event: response.created {"hasAudio":false,"keys":["type","event_id","response"]}
[DEBUG] User started speaking 
[INFO] OpenAI event: response.done {"hasAudio":false,"keys":["type","event_id","response"]}
[INFO] OpenAI event: conversation.item.input_audio_transcription.delta {"hasAudio":false,"keys":["type","event_id","item_id","content_index","delta","obfuscation"]}
[INFO] OpenAI event: conversation.item.input_audio_transcription.completed {"hasAudio":false,"keys":["type","event_id","item_id","content_index","transcript","usage"]}
[INFO] User said {"transcript":""}
[INFO] OpenAI event: conversation.item.input_audio_transcription.delta {"hasAudio":true,"keys":["type","event_id","item_id","content_index","delta","obfuscation"]}
[INFO] OpenAI event: conversation.item.input_audio_transcription.completed {"hasAudio":false,"keys":["type","event_id","item_id","content_index","transcript","usage"]}
[INFO] User said {"transcript":"people are going to have."}
[INFO] OpenAI event: input_audio_buffer.speech_stopped {"hasAudio":false,"keys":["type","event_id","audio_end_ms","item_id"]}
[INFO] OpenAI event: input_audio_buffer.committed {"hasAudio":false,"keys":["type","event_id","previous_item_id","item_id"]}
[INFO] OpenAI event: conversation.item.created {"hasAudio":false,"keys":["type","event_id","previous_item_id","item"]}
[INFO] OpenAI event: response.created {"hasAudio":false,"keys":["type","event_id","response"]}
[INFO] OpenAI event: response.output_item.added {"hasAudio":false,"keys":["type","event_id","response_id","output_index","item"]}
[INFO] OpenAI event: conversation.item.created {"hasAudio":false,"keys":["type","event_id","previous_item_id","item"]}
[INFO] OpenAI event: response.content_part.added {"hasAudio":false,"keys":["type","event_id","response_id","item_id","output_index","content_index","part"]}
[DEBUG] AI speaking {"text":"I'm"}
[DEBUG] AI speaking {"text":" sorry"}
[DEBUG] AI speaking {"text":","}
[DEBUG] AI speaking {"text":" I"}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[DEBUG] AI speaking {"text":" couldn't"}
[DEBUG] AI speaking {"text":" understand"}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[DEBUG] AI speaking {"text":" that"}
[DEBUG] AI speaking {"text":"."}
[DEBUG] AI speaking {"text":" Can"}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[DEBUG] AI speaking {"text":" you"}
[DEBUG] AI speaking {"text":" please"}
[DEBUG] AI speaking {"text":" repeat"}
[DEBUG] AI speaking {"text":" your"}
[DEBUG] AI speaking {"text":" request"}
[DEBUG] AI speaking {"text":"?"}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.delta {"hasAudio":true,"keys":["type","event_id","response_id","item_id","output_index","content_index","delta"]}
[INFO] OpenAI event: response.audio.done {"hasAudio":false,"keys":["type","event_id","response_id","item_id","output_index","content_index"]}
[INFO] OpenAI event: response.audio_transcript.done {"hasAudio":false,"keys":["type","event_id","response_id","item_id","output_index","content_index","transcript"]}
[INFO] OpenAI event: response.content_part.done {"hasAudio":false,"keys":["type","event_id","response_id","item_id","output_index","content_index","part"]}
[INFO] OpenAI event: response.output_item.done {"hasAudio":false,"keys":["type","event_id","response_id","output_index","item"]}
[INFO] OpenAI event: response.done {"hasAudio":false,"keys":["type","event_id","response"]}
[INFO] OpenAI event: rate_limits.updated {"hasAudio":false,"keys":["type","event_id","rate_limits"]}
[INFO] OpenAI event: conversation.item.input_audio_transcription.delta {"hasAudio":true,"keys":["type","event_id","item_id","content_index","delta","obfuscation"]}
[INFO] OpenAI event: conversation.item.input_audio_transcription.completed {"hasAudio":false,"keys":["type","event_id","item_id","content_index","transcript","usage"]}
[INFO] User said {"transcript":"Oh"}
[DEBUG] User started speaking 
[INFO] Twilio stream stopped {"streamSid":"MZ288d9a4253cf8e9fc1dd67684d44f7c2"}
[INFO] Cleaning up bridge {"streamSid":"MZ288d9a4253cf8e9fc1dd67684d44f7c2","callSid":"CA2323ec6f81268d3b5d2fd3e46556a99c"}
[DEBUG] Keepalive stopped 
[INFO] Twilio WebSocket closed 
[INFO] OpenAI WebSocket closed 
Need better ways to work with log